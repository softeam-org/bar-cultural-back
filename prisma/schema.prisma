// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Status {
  Ativo
  Inativo
}

model Administrator {
  id         String   @id @default(uuid())
  name       String
  email      String   @unique
  password   String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt()

  @@map("administrators")
}

model Category {
  id         String    @id @default(uuid())
  name       String    @unique
  is_active  Boolean   @default(true)
  products   Product[]
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt()

  @@map("categories")
}

model Event {
  id           String         @id @default(uuid())
  name         String
  ended_at     DateTime
  attraction   String
  observations String
  created_at   DateTime       @default(now())
  updated_at   DateTime       @updatedAt()
  products     ProductEvent[]
  sales        Sale[]

  @@map("events")
}

model Product {
  id              String         @id @default(uuid())
  category        Category       @relation(fields: [categoryId], references: [id])
  categoryId      String
  name            String         @unique
  description     String
  value           Float
  amount_in_stock Int
  is_active       Boolean        @default(true)
  created_at      DateTime       @default(now())
  updated_at      DateTime       @updatedAt()
  events          ProductEvent[]

  @@map("products")
}

model Seller {
  cpf        String   @id
  password   String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt()

  @@map("sellers")
}

model PaymentTerminal {
  id     String @id @default(uuid())
  status Status
  sales  Sale[]

  @@map("payment-terminals")
}

model ProductEvent {
  product    Product @relation(fields: [product_id], references: [id])
  product_id String
  event      Event   @relation(fields: [event_id], references: [id])
  event_id   String

  @@id(name: "productEventId", [product_id, event_id])
  @@map("products_events")
}

model Sale {
  id                  String          @id @default(uuid())
  //seller            Seller          @realtion(fields: [seller_id], references: [id])
  //seller_id         String
  event               Event           @relation(fields: [event_id], references: [id])
  event_id            String
  payment_terminal    PaymentTerminal @relation(fields: [payment_terminal_id], references: [id])
  payment_terminal_id String
  total_value         Float
  payment_methods     PaymentMethod[]

  @@map("sales")
}

model PaymentMethod {
  id      String @id @default(uuid())
  method  String
  value   Float
  sale    Sale   @relation(fields: [sale_id], references: [id], onDelete: Cascade)
  sale_id String

  @@map("payment_methods")
}
